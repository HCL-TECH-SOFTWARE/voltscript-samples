%REM
	Copyright 2023 HCL America, Inc.
	Licensed under the Apache License, Version 2.0 (the "License"); 
	you may not use this file except in compliance with the License. 
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, 
	software distributed under the License is distributed on an "AS IS" BASIS, 
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
	See the License for the specific language governing permissions and limitations under the License	
%END REM

Option Declare
Option Public

UseVSE "*StreamVSE"
UseVSE "*ZipVSE"

%REM
    Creates or opens a file using UTF-8 character encoding
%END REM
Function createOpenFile(stream as Stream, filePath as String) as Boolean
    Try
        Call stream.open(filePath, "UTF-8")
        Return True
    Catch
        Print "Error " & Error() & " on line " & Erl()
        Return False
    Finally
        If (stream.isOpen) Then
            Call stream.close()
        End If
    End Try
End Function

%REM
    Write text to a file, ending the text with a line feed. 
    It also then appends an additional line feed.
%END REM
Function writeToFile(stream as Stream, text as String) as Boolean
    Call stream.writeText(text, EOL_LF)
    call stream.writeNewLine(EOL_LF)
End Function

%REM
    Reads text line-by-line, building up the complete text.
    NOTE: line feed (Chr(10)) needs to be manually added
%END REM
Function readFromFile(stream as Stream) as String
    Dim retVal as String
    While Not stream.isEOS
        retVal = retVal & stream.readText(True, EOL_ANY) & Chr(10)
    Wend
    Return retVal
End Function

%REM
    Reads the whole file, including line feeds
%END REM
Function readWholeFile(stream as Stream) as String
    Return stream.readText()
End Function

%REM
    Create a zip archive specifying files explicitly
%END REM
Function createZipAdd(dirPath as String) as ZipArchive
    Dim zip as New ZipArchive()
    ChDir dirPath
    Call zip.createArchive("zip1.zip", "", True)
    Call zip.addFile("test1.txt", "")
    Call zip.addFile("test2.txt", "")
    Return zip
End Function

%REM
    Create a zip archive using a wildcard spec
%END REM
Function createZipSpec(dirPath as String) as ZipArchive
    Dim zip as New ZipArchive()
    ChDir dirPath
    Call zip.createArchive("zip2.zip", "", True)
    Call zip.addFiles(CurDir, "*.txt")
    Return zip
End Function

%REM
    Creatng a zip archive using an array of filenames
%END REM
Function createZipArray(dirPath as String) as ZipArchive
    Dim zip as New ZipArchive()
    ChDir dirPath
    Dim files(1) as String
    files(0) = "test1.txt"
    files(1) = "test2.txt"
    Call zip.createArchive("zip3.zip", "", True)
    Call zip.addFileList(CurDir, files)
    Return zip
End Function

%REM
    Extracts all files from a zip
%END REM
Function extractZip(dirPath as String)
    Dim zip as New ZipArchive()
    Call zip.openArchive(dirPath & "/zip1.zip")
    Call zip.extractAllFiles(dirPath & "/zip1", False, True)
End Function

%REM
    Extracts all files from a zip
%END REM
Function extractZipEachFile(dirPath as String)
    Dim zip as New ZipArchive()
    Dim file as ZipFile

    ChDir DirPath
    Call zip.openArchive("zip1.zip")
    Set file = zip("test1.txt")
    Call file.extractFile("zip2", False, True)
    Set file = zip("test2.txt")
    Call file.extractFile("zip2", False, True)
End Function